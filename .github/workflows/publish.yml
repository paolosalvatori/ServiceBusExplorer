name: publish
  
on: 
  workflow_call:
    secrets:
      CHOCO_TOKEN: 
        required: true
    inputs:
      release-version:
        required: true
        type: string

jobs:
  publish:
    name: publish
    runs-on: windows-2022
    steps:
    - name: Set output path
      env:
        STEP_RELEASE_VERSION: ${{ inputs.release-version }}
      run: |
        echo "OUTPUT_PATH=$env:GITHUB_WORKSPACE\src\ServiceBusExplorer\bin\Release" >> $env:GITHUB_ENV
        echo "RELEASE_VERSION=$env:STEP_RELEASE_VERSION" >> $env:GITHUB_ENV
       
    - uses: actions/checkout@v3

    - name: Verify release version and get just the numbers and the dots
      id: get-number-version
      run: |
        [string]$numberVersion = .\GetNumberVersion -Version ${{ inputs.release-version }}
        echo "Got version $numberVersion"
        [bool]$prelease = $false
        if ($numberVersion -eq ${{ inputs.release-version }}) {
          $prelease = $True
        }
        echo "PRELEASE=$prerelease" >> $env:GITHUB_ENV

    - name: Get cached build
      id: get-cached-build
      uses: actions/cache@v3.0.5
      with:
        path: src/ServiceBusExplorer/bin/Release
        key: cached-output-${{ github.sha }}

    - name: Did we get a cache hit
      if: steps.get-cached-build.outputs.cache-hit != 'true'
      run: |
        echo "Couldn't find build artifacts. Expected to find artifacts in cache but no items were found."
        exit 1

    - name: Remove ALL xml files.
      run: | 
        Push-Location $env:OUTPUT_PATH
        Get-ChildItem -Include *.xml -Recurse | % { Remove-Item $_.FullName }

    - name: Reset verification file
      run:  |
        (Set-Content -Value "VERIFICATION=MD5" -Path $env:GITHUB_WORKSPACE\src\VERIFICATION.txt)
      
    - name: Generate verification file
      run: .\Generate-VerificationFile.ps1 -Version $env:RELEASE_VERSION -TemplateFilePath VERIFICATION-Template.txt -ExePath "$env:OUTPUT_PATH\ServiceBusExplorer.exe" -OutputFilePath "$env:OUTPUT_PATH\VERIFICATION.txt"

    - name: Modify .nuspec file
      run: (Get-Content $env:GITHUB_WORKSPACE\src\ServiceBusExplorer\ServiceBusExplorer.nuspec).Replace("`$version`$", "$env:RELEASE_VERSION") | Set-Content $env:GITHUB_WORKSPACE\src\ServiceBusExplorer\ServiceBusExplorer.nuspec

    - name: Pack Chocolatey 
      run: choco pack $env:GITHUB_WORKSPACE\src\ServiceBusExplorer\ServiceBusExplorer.nuspec

    - name: Create filenames for zip and nupkg
      run: |
        $stepFilename = "ServiceBusExplorer-$($env:RELEASE_VERSION)"
        echo "ZipFilename=ServiceBusExplorer-$($env:RELEASE_VERSION).zip" >> $env:GITHUB_ENV
        echo "NupkgFilename=ServiceBusExplorer.$($env:RELEASE_VERSION).nupkg" >> $env:GITHUB_ENV
   
    - name: Compress output
      run: |
        7z a $env:ZipFilename $env:OUTPUT_PATH\*.*
        
    - name: Create the release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      continue-on-error: true
      run: |
        gh release create ${{ env.RELEASE_VERSION }}  --draft --generate-notes

    - name: Upload build output zipped
      working-directory: ${{env.GITHUB_WORKSPACE}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
      run: |
        Start-Sleep 1 
        gh release upload ${{ env.RELEASE_VERSION }} $env:ZipFilename $env:NupkgFilename

    - name: Publish to Chocolatey if not prerelease
      if: ${{ ! env.prerelease }}
      env:
        CHOCO_TOKEN: ${{ secrets.CHOCO_TOKEN }}
      run: |
        choco push $env:NupkgFilename -k="$env:CHOCO_TOKEN"
