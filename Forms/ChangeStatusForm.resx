<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAurq6Abu7
        uxS5ubkn2traQsjIyDMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwAO/v78WxcXFKeHh4UDh4eFi39/fhfj4
        +Kj////I////3P////D/////5eXllwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADBwcEEwMDAFcLCwgrf398/4eHhZN/f34jy8vKr////yv///93////x////////
        ///////////////////////////////////i4uKSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwcHBBcLC
        whmvr68r1dXVReLi4mfg4OCL7+/vrf///83////Q////Qf////L/////////////////////////////
        /////////////////////////////////////////////+Li4pIAAAAAAAAAAJmZmRTk5ORp4ODgjfz8
        /LD////N////4P////T///////////////////////////////L///9F////7v//////////////////
        ////////////////////////////////////////////////////////4uLikgAAAAAAAAAA5ubmP///
        ////////////////////////////////////////////////////////////7v///0X////t////////
        ///////////////////////////////////////////////////////////////////i4uKSAAAAAAAA
        AADi4uI9///////////////////////////////////////////////////////////////u////RP//
        /+3//////////////////////////////////////////////////////////////////////////+Li
        4pIAAAAAAAAAAOLi4j3/////////////////////////////////////////////////////////////
        /+7///9E////7f//////////////////////////////////////////////////////////////////
        ////////4uLikgAAAAAAAAAA4uLiPf//////////////////////////////////////////////////
        ////////////7v///0T////t////////////////////////////////////////////////////////
        ///////////////////i4uKSAAAAAAAAAADi4uI9////////////////////////////////////////
        ///////////////////////u////RP///+3/////////////////////////////////////////////
        /////////////////////////////+Li4pIAAAAAAAAAAOLi4j3/////////////////////////////
        /////////////////////////////////+7///9E////7f//////////////////////////////////
        ////////////////////////////////////////4uLikgAAAAAAAAAA4uLiPf//////////////////
        ////////////////////////////////////////////7v///0T////t////////////////////////
        ///////////////////////////////////////////////////i4uKSAAAAAAAAAADi4uI9////////
        ///////////////////////////////////////////////////////u////Rf///+3/////////////
        /////////////////////////////////////////////////////////////+Li4pIAAAAAAAAAAOXl
        5T////////////////////////////////////////////////////////////////X///9G////9P//
        ////////////////////////////////////////////////////////////////////////5eXllgAA
        AAAAAAAAxMTELODg4Lnd3d243d3duN3d3bjd3d243d3duN3d3bjd3d243d3duN3d3bjd3d253d3drN3d
        3TLd3d2r3d3dud3d3bjd3d243d3duN3d3bjd3d243d3duN3d3bjd3d243d3duN3d3bjd3d243d3duODg
        4LzExMRpAAAAAAAAAABwcHANgYGBNn9/fzZ/f382f39/Nn9/fzZ/f382f39/Nn9/fzZ/f382f39/Nn9/
        fzZ/f38yf39/Dn9/fzJ/f382f39/Nn9/fzZ/f382f39/Nn9/fzZ/f382f39/Nn9/fzZ/f382f39/Nn9/
        fzZ/f382gYGBN3BwcB8AAAAAAAAAAObm5j//////////////////////////////////////////////
        //////////////////X///9G////9f//////////////////////////////////////////////////
        ////////////////////////5ubmlgAAAAAAAAAA4uLiPf//////////////////////////////////
        ////////////////////////////7v///0T////t////////////////////////////////////////
        ///////////////////////////////////i4uKSAAAAAAAAAADi4uI9////////////////////////
        ///////////////////////////////////////u////RP///+3/////////////////////////////
        /////////////////////////////////////////////+Li4pIAAAAAAAAAAOLi4j3/////////////
        /////////////////////////////////////////////////+7///9E////7f//////////////////
        ////////////////////////////////////////////////////////4uLikgAAAAAAAAAA4uLiPf//
        ////////////////////////////////////////////////////////////7v///0T////t////////
        ///////////////////////////////////////////////////////////////////i4uKSAAAAAAAA
        AADi4uI9///////////////////////////////////////////////////////////////u////RP//
        /+3//////////////////////////////////////////////////////////////////////////+Li
        4pIAAAAAAAAAAOLi4j3/////////////////////////////////////////////////////////////
        /+7///9E////7f//////////////////////////////////////////////////////////////////
        ////////4uLikgAAAAAAAAAA4uLiPf//////////////////////////////////////////////////
        ////////////7v///0T////t////////////////////////////////////////////////////////
        ///////////////////i4uKSAAAAAAAAAADk5OQ/////////////////////////////////////////
        ///////////////////////u////RP///+3/////////////////////////////////////////////
        /////////////////////////////+Li4pIAAAAAAAAAANLS0iv////K////3f////H/////////////
        /////////////////////////////////+7///9E////7f//////////////////////////////////
        ////////////////////////////////////////4uLikgAAAAAAAAAAAAAAAMPDwwLAwMAVwMDAKNvb
        20Di4uJh4ODghe3t7af////H////3P///+//////////9v///0b////0////////////////////////
        ///////////////////////////////////////////////////i4uKSAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMHBwQHAwMAUwcHBJ97e3j/h4eFY39/fIfHx8Zv////H////2v//
        /+7//////////////////////////////////////////////////////////+Li4pIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADAwMASw8PDJuDg4Dzh4eFc4ODggOXl5aP////E////2f///+3/////////////////////4uLilgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7u7sRubm5JdbW1jri4uJa4ODgfezs
        7Kjk5ORtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////8H//+AB//AAAfgAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABwAAAAf+AAAH//4AB////Af////8=
</value>
  </data>
</root>